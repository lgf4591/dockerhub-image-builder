name: Docker Image CI/CD Template
on:
  push:
    branches: [ main ]
    paths:   # 这里是用来指定哪个文件更改，才会触发的
      - 'devcontainer/debian/Dockerfile.build-latest'               # 包括路径
      - 'devcontainer/common_build.sh'                              # 包括路径
      - '!docs/**'                                                  # 排除路径
jobs:
  # 构建并上传 Docker镜像
  build: 
    runs-on: ubuntu-latest # 依赖的环境      
    steps:
      - uses: actions/checkout@v2
      - name: Build Image
        run: |
          docker build -t lgf4591/debian:latest -f devcontainer/debian/Dockerfile.build-latest .
      - name: Login to Registry
        # run: docker login --username=${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }}  --password-stdin
      - name: Push Image
        run: |
          docker push lgf4591/debian:latest


# python app template

# # This workflow will install Python dependencies, run tests and lint with a single version of Python
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# name: Python application

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
